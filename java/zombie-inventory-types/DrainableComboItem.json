{
  "$schema": "https://raw.githubusercontent.com/asledgehammer/PZ-Rosetta-Schema/main/rosetta-schema.json",
  "namespaces": {
    "zombie-inventory-types": {
      "DrainableComboItem": {
        "constructors": [
          {
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "module",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "name",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "itemType",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "texName",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              }
            ]
          },
          {
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "module",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "name",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "itemType",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "item",
                "type": {
                  "nullable": true,
                  "basic": "Item"
                }
              }
            ]
          }
        ],
        "extends": "InventoryItem",
        "methods": [
          {
            "name": "CanStack",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "item",
                "type": {
                  "nullable": true,
                  "basic": "InventoryItem"
                }
              }
            ]
          },
          {
            "name": "IsDrainable",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "Use",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "canConsolidate",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "finishupdate",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getDelta",
            "returns": {
              "notes": "the delta",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getDrainableUsesFloat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getDrainableUsesInt",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getHeat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getInvHeat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getOnCooked",
            "returns": {
              "notes": "the OnCooked",
              "type": {
                "nullable": true,
                "basic": "String"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getRainFactor",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getRemainingUses",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getReplaceOnCooked",
            "returns": {
              "notes": "the ReplaceOnCooked",
              "type": {
                "nullable": true,
                "basic": "List"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getReplaceOnDeplete",
            "returns": {
              "notes": "the ReplaceOnDeplete",
              "type": {
                "nullable": true,
                "basic": "String"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getReplaceOnDepleteFullType",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "String"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getSaveType",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getTicks",
            "returns": {
              "notes": "the ticks",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getTicksPerEquipUse",
            "returns": {
              "notes": "the ticksPerEquipUse",
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getUseDelta",
            "returns": {
              "notes": "the useDelta",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getUsedDelta",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "getWeightEmpty",
            "returns": {
              "notes": "the EmptyWeight",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "isUseWhileEquiped",
            "returns": {
              "notes": "the bUseWhileEquiped",
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "isUseWhileUnequiped",
            "returns": {
              "notes": "the bUseWhileUnequiped",
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "render",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "renderlast",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "setCanConsolidate",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "canConsolidate",
                "type": {
                  "nullable": false,
                  "basic": "boolean"
                }
              }
            ]
          },
          {
            "name": "setDelta",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the delta to set",
                "name": "delta",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "setHeat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "heat",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "setOnCooked",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the onCooked to set",
                "name": "onCooked",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              }
            ]
          },
          {
            "name": "setRainFactor",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "rainFactor",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "setReplaceOnCooked",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the ReplaceOnCooked to set",
                "name": "replaceOnCooked",
                "type": {
                  "nullable": true,
                  "basic": "List",
                  "full": "List\u003cString\u003e"
                }
              }
            ]
          },
          {
            "name": "setReplaceOnDeplete",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "ReplaceOnDeplete",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              }
            ]
          },
          {
            "name": "setTicks",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the ticks to set",
                "name": "ticks",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "setTicksPerEquipUse",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the ticksPerEquipUse to set",
                "name": "ticksPerEquipUse",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              }
            ]
          },
          {
            "name": "setUseDelta",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the useDelta to set",
                "name": "useDelta",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "setUseWhileEquiped",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the bUseWhileEquiped to set",
                "name": "bUseWhileEquiped",
                "type": {
                  "nullable": false,
                  "basic": "boolean"
                }
              }
            ]
          },
          {
            "name": "setUseWhileUnequiped",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the bUseWhileUnequiped to set",
                "name": "bUseWhileUnequiped",
                "type": {
                  "nullable": false,
                  "basic": "boolean"
                }
              }
            ]
          },
          {
            "name": "setUsedDelta",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "usedDelta",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "setWeightEmpty",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "notes": "the EmptyWeight to set",
                "name": "weight",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "shouldUpdateInWorld",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "update",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ]
          },
          {
            "name": "updateWeight",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "void"
              }
            },
            "modifiers": [
              "public"
            ]
          }
        ],
        "modifiers": [
          "public",
          "final"
        ],
        "fields": {
          "ReplaceOnCooked": {
            "deprecated": false,
            "name": "ReplaceOnCooked",
            "modifiers": [
              "public"
            ],
            "type": {
              "nullable": true,
              "basic": "List"
            }
          }
        },
        "javaType": "class"
      }
    }
  }
}