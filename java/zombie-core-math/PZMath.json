{
  "$schema": "https://raw.githubusercontent.com/asledgehammer/PZ-Rosetta-Schema/main/rosetta-schema.json",
  "namespaces": {
    "zombie-core-math": {
      "PZMath": {
        "constructors": [
          {
            "modifiers": [
              "public"
            ]
          }
        ],
        "extends": "Object",
        "methods": [
          {
            "name": "abs",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "notes": "Almost Identity   Imagine you don\u0027t want to modify a signal unless it\u0027s drops to zero or close to it, in which case you want  to replace the value with a small possitive constant. Then, rather than clamping the value and introduce  a discontinuity, you can smoothly blend the signal into the desired clipped value. So, let m be the threshold  (anything above m stays unchanged), and n the value things will take when the signal is zero.  Then, the following function does the soft clipping (in a cubic fashion):   https://iquilezles.org/www/articles/functions/functions.htm",
            "name": "almostIdentity",
            "returns": {
              "notes": "value in [0..1]",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "notes": "value in [0..1]",
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "m",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "n",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "notes": "Almost Unit Identity   This is a near-identiy function that maps the unit interval into itself. It is the cousin of smoothstep(), in  that it maps 0 to 0, 1 to 1, and has a 0 derivative at the origin, just like smoothstep. However, instead of  having a 0 derivative at 1, it has a derivative of 1 at that point. It\u0027s equivalent to the Almost Identiy above  with n\u003d0 and m\u003d1. Since it\u0027s a cubic just like smoothstep() it is very fast to evaluate.   https://iquilezles.org/www/articles/functions/functions.htm",
            "name": "almostUnitIdentity",
            "returns": {
              "notes": "value in [0..1]",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "notes": "value in [0..1]",
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "c_lerp",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "src",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "dest",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "alpha",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "canParseFloat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "varStr",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              }
            ]
          },
          {
            "name": "ceil",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "notes": "Result is clamped between min and max.",
            "name": "clamp",
            "returns": {
              "notes": "min \u003c\u003d val \u003c\u003d max",
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "min",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "max",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "clamp",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "long"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "long"
                }
              },
              {
                "name": "min",
                "type": {
                  "nullable": false,
                  "basic": "long"
                }
              },
              {
                "name": "max",
                "type": {
                  "nullable": false,
                  "basic": "long"
                }
              }
            ]
          },
          {
            "notes": "Result is clamped between min and max.",
            "name": "clamp",
            "returns": {
              "notes": "min \u003c\u003d val \u003c\u003d max",
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              },
              {
                "name": "min",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              },
              {
                "name": "max",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              }
            ]
          },
          {
            "name": "clampFloat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "min",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "max",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "clamp_01",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "convertMatrix",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "Matrix4f"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "src",
                "type": {
                  "nullable": true,
                  "basic": "Matrix4f"
                }
              },
              {
                "name": "dst",
                "type": {
                  "nullable": true,
                  "basic": "Matrix4f"
                }
              }
            ]
          },
          {
            "name": "convertMatrix",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "Matrix4f"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "src",
                "type": {
                  "nullable": true,
                  "basic": "Matrix4f"
                }
              },
              {
                "name": "dst",
                "type": {
                  "nullable": true,
                  "basic": "Matrix4f"
                }
              }
            ]
          },
          {
            "name": "degToRad",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "degrees",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "equal",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "a",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "equal",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "boolean"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "a",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "delta",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "fastfloor",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "double"
                }
              }
            ]
          },
          {
            "name": "fastfloor",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "floor",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "frac",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "notes": "Gain   Remapping the unit interval into the unit interval by expanding the sides and compressing the center, and  keeping 1/2 mapped to 1/2, that can be done with the gain() function. This was a common function in RSL tutorials  (the Renderman Shading Language). k\u003d1 is the identity curve, k\u003c1 produces the classic gain() shape, and k\u003e1  produces \"s\" shaped curces. The curves are symmetric (and inverse) for k\u003da and k\u003d1/a.   https://iquilezles.org/www/articles/functions/functions.htm",
            "name": "gain",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "k",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "getClosestAngle",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "in_radsA",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "in_radsB",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "getClosestAngleDegrees",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "in_degsA",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "in_degsB",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerp",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "src",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "dest",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "alpha",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerp",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "Vector3f"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "out",
                "type": {
                  "nullable": true,
                  "basic": "Vector3f"
                }
              },
              {
                "name": "a",
                "type": {
                  "nullable": true,
                  "basic": "Vector3f"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": true,
                  "basic": "Vector3f"
                }
              },
              {
                "name": "t",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerp",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "Vector2"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "out",
                "type": {
                  "nullable": true,
                  "basic": "Vector2"
                }
              },
              {
                "name": "a",
                "type": {
                  "nullable": true,
                  "basic": "Vector2"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": true,
                  "basic": "Vector2"
                }
              },
              {
                "name": "t",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerpAngle",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "src",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "dest",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "alpha",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerpFunc_EaseInQuad",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerpFunc_EaseOutInQuad",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "lerpFunc_EaseOutQuad",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "max",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "a",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "max",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "a",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              }
            ]
          },
          {
            "name": "min",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "a",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "min",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "a",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              },
              {
                "name": "b",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              }
            ]
          },
          {
            "name": "radToDeg",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "radians",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "roundFromEdges",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "roundToInt",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "roundToIntPlus05",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "roundToNearest",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "sign",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "slerp",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "Quaternion"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "result",
                "type": {
                  "nullable": true,
                  "basic": "Quaternion"
                }
              },
              {
                "name": "from",
                "type": {
                  "nullable": true,
                  "basic": "Quaternion"
                }
              },
              {
                "name": "to",
                "type": {
                  "nullable": true,
                  "basic": "Quaternion"
                }
              },
              {
                "name": "alpha",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "sqrt",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "step",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "from",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "to",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "delta",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "testSideOfLine",
            "returns": {
              "type": {
                "nullable": true,
                "basic": "SideOfLine"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "x1",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "y1",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "x2",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "y2",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "px",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "py",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "tryParseDouble",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "double"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "varStr",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "defaultVal",
                "type": {
                  "nullable": false,
                  "basic": "double"
                }
              }
            ]
          },
          {
            "name": "tryParseFloat",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "varStr",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "defaultVal",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "tryParseInt",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "int"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "varStr",
                "type": {
                  "nullable": true,
                  "basic": "String"
                }
              },
              {
                "name": "defaultVal",
                "type": {
                  "nullable": false,
                  "basic": "int"
                }
              }
            ]
          },
          {
            "name": "wrap",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "range",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          },
          {
            "name": "wrap",
            "returns": {
              "type": {
                "nullable": false,
                "basic": "float"
              }
            },
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "in_val",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "in_min",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              },
              {
                "name": "in_max",
                "type": {
                  "nullable": false,
                  "basic": "float"
                }
              }
            ]
          }
        ],
        "modifiers": [
          "public",
          "final"
        ],
        "fields": {
          "degToRads": {
            "notes": "Conversion ratios, Degrees to Radians and back",
            "deprecated": false,
            "name": "degToRads",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "float"
            }
          },
          "radToDegs": {
            "deprecated": false,
            "name": "radToDegs",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "float"
            }
          },
          "PI2": {
            "deprecated": false,
            "name": "PI2",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "float"
            }
          },
          "microsToNanos": {
            "deprecated": false,
            "name": "microsToNanos",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "long"
            }
          },
          "millisToMicros": {
            "deprecated": false,
            "name": "millisToMicros",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "long"
            }
          },
          "PI": {
            "notes": "The double value that is closer than any other to  pi, the ratio of the circumference of a circle to its  diameter.",
            "deprecated": false,
            "name": "PI",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "float"
            }
          },
          "secondsToNanos": {
            "deprecated": false,
            "name": "secondsToNanos",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "nullable": false,
              "basic": "long"
            }
          },
          "secondsToMillis": {
            "deprecated": false,
            "name": "secondsToMillis",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "nullable": false,
              "basic": "long"
            }
          }
        },
        "javaType": "class"
      }
    }
  }
}